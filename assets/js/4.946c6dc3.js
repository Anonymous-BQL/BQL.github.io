(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{54:function(e,r,t){"use strict";t.r(r);var a=t(0),n=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"spring-类型转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-类型转换","aria-hidden":"true"}},[e._v("#")]),e._v(" Spring 类型转换")]),t("h3",{attrs:{id:"_1-converter-s-t"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-converter-s-t","aria-hidden":"true"}},[e._v("#")]),e._v(" 1. Converter<S,T>")]),t("blockquote",[t("p",[e._v("从S类型转换到T类型，属于具体类型的转换")])]),t("h3",{attrs:{id:"_2-converterfactory-s-r"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-converterfactory-s-r","aria-hidden":"true"}},[e._v("#")]),e._v(" 2. ConverterFactory<S,R>")]),t("blockquote",[t("p",[e._v("从S类型到R类型以及R类型的子类，属于类级别类型转换")])]),t("h3",{attrs:{id:"_3-genericconverter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-genericconverter","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. GenericConverter")]),t("blockquote",[t("p",[e._v("更为灵活的类型转换，可以从任意类型转换为某类型，不限制S")])]),t("h3",{attrs:{id:"_4-converterregister"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-converterregister","aria-hidden":"true"}},[e._v("#")]),e._v(" 4. ConverterRegister")]),t("blockquote",[t("p",[e._v("统一管理Converter与CoverterFactory，GenericConverter")])]),t("h3",{attrs:{id:"_5-conversionservice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-conversionservice","aria-hidden":"true"}},[e._v("#")]),e._v(" 5. ConversionService")]),t("blockquote",[t("p",[e._v("可以实现用来整合ConverterRegister.")])]),t("blockquote",[t("p",[e._v("mvc中可以用于注册所有Converter")])]),t("blockquote",[t("blockquote",[t("p",[t("code",[e._v('<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean"> <property name="converters"> <set> <bean class="example.MyCustomConverter"/> </set> </property> </bean>')])])])]),t("p",[t("em",[e._v("Spring 会将所有的 Converter和 Register，Factory转换为 GenericCoverter， 使用 Service管理")])])])}],!1,null,null,null);r.default=n.exports}}]);